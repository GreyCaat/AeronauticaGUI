getgenv().Toggle = false
getgenv().ToggleAntiAfk = false
getgenv().ToggleWayLoop = false
getgenv().ToggleFullBright = false

-----------------------------------------------------------------------------------------------------------------------
--CrateEsp
local Name = tostring(game.Players.LocalPlayer)
local camera = workspace.CurrentCamera

local function round(n)
    return math.floor(n + 0.5)
end

local function DrawDrop(drop)

    local DropText = Drawing.new("Text")
    DropText.Visible = false
    DropText.Center = true
    DropText.Outline = true
    DropText.Font = 2
    DropText.Size = 20
    DropText.Color = Color3.new(50, 50, 50)
    DropText.Text = "Crate"

    local Part = Instance.new("Part")
    Part.Size = Vector3.new(0.1, 0.1, 0.1)
    Part.Name = "Yes"
    Part.Transparency = 1
    Part.Anchored = true
    Part.Parent = drop
    Part.CanCollide = false
    Part.Position = drop.Position + Vector3.new(0, -0.35, 0)

    local BoxHandleAdornment = Instance.new("BoxHandleAdornment")
    BoxHandleAdornment.Color3 = Color3.new(255, 255, 255)
    BoxHandleAdornment.Transparency = 0.1
    BoxHandleAdornment.AlwaysOnTop = true
    BoxHandleAdornment.ZIndex = 10
    BoxHandleAdornment.Parent = drop
    BoxHandleAdornment.Adornee = Part
    BoxHandleAdornment.Size = Vector3.new(0.3, 0.3, 0.3)
    BoxHandleAdornment.Visible = false

    local DistanceText = Drawing.new("Text")
    DistanceText.Visible = false
    DistanceText.Center = true
    DistanceText.Outline = true
    DistanceText.Font = 3
    DistanceText.Size = 15
    DistanceText.Color = Color3.new(50, 50, 50)
    DistanceText.Text = "Distance: "

    local Airport = Drawing.new("Text")
    Airport.Visible = false
    Airport.Center = true
    Airport.Outline = true
    Airport.Font = 3
    Airport.Size = 12
    Airport.Color = Color3.new(50, 50, 50)
    Airport.Text = ""

    local function UPDATER()
        local c
        c = game:GetService("RunService").RenderStepped:Connect(function()
            if Toggle then
                if drop then
                    if drop.Transparency == 1 then
                        DropText.Visible = false
                        DistanceText.Visible = false
                        Airport.Visible = false
                        BoxHandleAdornment.Visible = false
                    else
                        BoxHandleAdornment.Visible = true
                        local dropvector, onscreen = camera:WorldToViewportPoint(drop.Position)

                        if onscreen then
                            DropText.Position = Vector2.new(dropvector.X, dropvector.Y + 5)
                            DropText.Visible = true
                            DistanceText.Position  = Vector2.new(dropvector.X, dropvector.Y + 22)
                            DistanceText.Text = "Distance:".. round((drop.Position - game.Workspace[Name].Head.Position).Magnitude)
                            DistanceText.Visible = true
                            Airport.Position  = Vector2.new(dropvector.X, dropvector.Y + 37)
                            local IslandString = string.gsub(drop.Parent.Name,' Crates','')
                            Airport.Text = IslandString
                            Airport.Visible = true
                        else
                            DropText.Visible = false
                            DistanceText.Visible = false
                            Airport.Visible = false
                        end
                    end
                end
            else
                BoxHandleAdornment.Visible = false
                DropText.Visible = false
                DistanceText.Visible = false
                Airport.Visible = false
            end
        end)
    end
    coroutine.wrap(UPDATER)()
end

for i,drop in pairs(game:GetService("Workspace").GrandWorkspace.Scenery.KitCrates:GetDescendants()) do
    if drop.Name == "CratePart" then
        coroutine.wrap(DrawDrop)(drop)
    end
end

spawn(function()
    while wait(10) do
        for i,drop in pairs(game:GetService("Workspace").GrandWorkspace.Scenery.KitCrates:GetDescendants()) do
            if drop.Name == "CratePart" then
                if drop:FindFirstChild("Yes") then
                else    
                    coroutine.wrap(DrawDrop)(drop)
                end
            end
        end
    end
end)

-----------------------------------------------------------------------------------------------------------------------
--AntiAfk
local VU = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    if ToggleAntiAfk == true then
        VU:CaptureController()
        VU:ClickButton2(Vector2.new())
    end
end)

-----------------------------------------------------------------------------------------------------------------------
--Ui Lib
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreyCaat/GC-Library/main/Lib.txt", true))()

local main = library:CreateMain("Aeronautica", "also me hello")




local Crates = main:CreateTab("Crate-Stuff")
local Teleports = main:CreateTab("Teleports")
local Routes = main:CreateTab("Route-Options")
local misc = main:CreateTab("Misc.")




local CrateEsp = Crates:CreateToggle("Crate Esp", function(state)
    if state then
        Toggle = true
    elseif not state then
        Toggle = false
    end
end)

local CollectCrates = Crates:CreateButton("Collect Crates", function()
    local PlayerName = tostring(game.Players.LocalPlayer)
    local plane;
    local originalpos1;
    local counter = 0

    for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
        counter = counter + 1
    end

    if counter == 1 then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Info";
            Text = "You need to be spawned in";
            Button1 = "Understood";
            Duration = math.huge
        })
    else
        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            if v.Name == "Head" then
            else
                plane = v
                originalpos1 = v.PrimaryPart.CFrame
            end
        end

        for i,v in pairs(game:GetService("Workspace").GrandWorkspace.Scenery.KitCrates:GetDescendants()) do
            if v.Name == "CratePart" and v.Transparency == 0 then

                plane.PrimaryPart.Anchored = false
                wait(0.1)
                plane:SetPrimaryPartCFrame(v.CFrame + Vector3.new(0, 0.25, 0))
                wait(0.1)
                plane.PrimaryPart.Anchored = true

                spawn(function()
                    repeat wait()
                        plane.Engine.BodyVelocity.Velocity = Vector3.new(0, plane.Engine.BodyVelocity.Velocity.Y, 0)
                    until v.Transparency == 1
                end)

                repeat wait()
                    plane.PrimaryPart.Anchored = false
                    wait(0.1)
                    plane.PrimaryPart.Anchored = true
                until v.Transparency == 1
            end
        end

        plane.PrimaryPart.Anchored = false
        plane:SetPrimaryPartCFrame(originalpos1)
    end
end)




local TeleAirport = Teleports:CreateDropdown("Airport Teleports")
for i, v in pairs(game:GetService("Workspace").GrandWorkspace.SpawnPoints:GetChildren()) do
    local AirportButton = TeleAirport:CreateDropdownButton(v.Name, function()
        local PlayerName = tostring(game.Players.LocalPlayer)
        local plane;
        local counter = 0

        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            counter = counter + 1
        end

        if counter == 1 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "You need to be spawned in";
                Button1 = "Understood";
                Duration = math.huge
            })
        else
            for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
                if v.Name == "Head" then
                else
                    plane = v
                end
            end

            plane:SetPrimaryPartCFrame(v.PrimaryPart.CFrame + Vector3.new(0, 1, 0))
        end
    end)
end

local lineloadsave = Teleports:CreateLine()

local infosavetp = Teleports:CreateLabel("Save first then load")
local pos;
local savepos = Teleports:CreateButton("Save Position", function()
    local PlayerName = tostring(game.Players.LocalPlayer)
    local plane;
    for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
        if v.Name == "Head" then
        else
            plane = v
            pos = v.PrimaryPart.CFrame
        end
    end
end)

local loadpos = Teleports:CreateButton("Load Position", function()
    local plane;
    local PlayerName = tostring(game.Players.LocalPlayer)
    if pos == nil then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Info";
            Text = "Safe a position first!";
            Button1 = "i forgor ðŸ’€";
            Duration = math.huge
        })
    else
        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            if v.Name == "Head" then
            else
                plane = v
            end
        end
        plane:SetPrimaryPartCFrame(pos)
    end
end)

local infotptomark = Routes:CreateLabel("If you got a marker/waypoint you can tp to it here")
local TpToWaypoint = Routes:CreateButton("Tp to marker", function() 
    local PlayerName = tostring(game.Players.LocalPlayer)
    local plane;
    local originalpos;
    local counter = 0

    for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
        counter = counter + 1
    end

    if counter == 1 then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Info";
            Text = "You need to be spawned in";
            Button1 = "Understood";
            Duration = math.huge
        })
    elseif game:GetService("Workspace").Junk.Guider.GUI.Enabled == false then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Info";
            Text = "Theres no marker";
            Button1 = "Understood";
            Duration = math.huge
        })
    else
        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            if v.Name == "Head" then
            else
                plane = v
                originalpos = v.PrimaryPart.Position
            end
        end

        plane:SetPrimaryPartCFrame(game:GetService("Workspace").Junk.Guider.CFrame + Vector3.new(0, 1, 0))
    end
end)

local lineairshow = Routes:CreateLine()

local infotptowaypoint = Routes:CreateLabel("This is (very) useful for Airshows")
local originalpos4;
local PlayerName4 = tostring(game.Players.LocalPlayer)
local check4;
local plane4;
local TpToWaypointLoop = Routes:CreateToggle("Tp to marker (loop)", function(state)
    if state then
        local counter = 0

        for i, v in pairs(game.Workspace[PlayerName4]:GetChildren()) do
            counter = counter + 1
        end

        if counter == 1 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "You need to be spawned in";
                Button1 = "Understood";
                Duration = math.huge
            })
        elseif game:GetService("Workspace").Junk.Guider.GUI.Enabled == false then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "Theres no marker";
                Button1 = "Understood";
                Duration = math.huge
            })
        else
            for i, v in pairs(game.Workspace[PlayerName4]:GetChildren()) do
                if v.Name == "Head" then
                else
                    plane4 = v
                    originalpos4 = v.PrimaryPart.CFrame
                end
            end
        
            check4 = game:GetService("RunService").RenderStepped:Connect(function()
                plane4:SetPrimaryPartCFrame(game:GetService("Workspace").Junk.Guider.CFrame)
            end)
        end
    elseif not state then
        for i, v in pairs(game.Workspace[PlayerName4]:GetChildren()) do
            if v.Name == "Head" then
            else
                plane4 = v
            end
        end
        if check4 ~= nil then
            check4:Disconnect()
        end
        if originalpos4 ~= nil then
            plane4:SetPrimaryPartCFrame(originalpos4)
        end
    end
end)

local linecargo = Routes:CreateLine()

local infotptowaypoint = Routes:CreateLabel('Useful for cargo drop missions')
local oldpos2;
local TpToWaypointLoopHeightLock = Routes:CreateToggle("Tp to marker (loop, 30000 ft)", function(state)
    local PlayerName = tostring(game.Players.LocalPlayer)
    local plane11;

    if state then
        local counter = 0

        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            counter = counter + 1
        end

        if counter == 1 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "You need to be spawned in";
                Button1 = "Understood";
                Duration = math.huge
            })
        elseif game:GetService("Workspace").Junk.Guider.GUI.Enabled == false then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "Theres no marker";
                Button1 = "Understood";
                Duration = math.huge
            })
        else
            for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
                if v.Name == "Head" then
                else
                    plane11 = v
                    oldpos2 = v.PrimaryPart.CFrame
                end
            end

            plane11.PrimaryPart.Anchored = false
            wait(0.1)
            plane11:SetPrimaryPartCFrame(game:GetService("Workspace").Junk.Guider.CFrame + Vector3.new(0, 1200, 0))
            wait(0.1)
            plane11.PrimaryPart.Anchored = true
        end
    elseif not state then
        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            if v.Name == "Head" then
            else
                plane11 = v
            end
        end
        plane11.PrimaryPart.Anchored = false
        if oldpos2 ~= nil then
            plane11:SetPrimaryPartCFrame(oldpos2)
        end
    end
end)


local full;
local FullBright = misc:CreateToggle("Always day", function(state)
    if state then
        ToggleFullBright = true

        full = game:GetService("RunService").RenderStepped:Connect(function()
            game.Lighting.TimeOfDay = "12:00:00"
        end)
    elseif not state then
        ToggleFullBright = false
        full:Disconnect()
    end
end)

local lineMisc = misc:CreateLine()

local infoafkfarm = misc:CreateLabel("If you want to farm minutes use these two")

local AntiAfk = misc:CreateToggle("Anti Afk", function(state)
    if state then
        ToggleAntiAfk = true
    elseif not state then
        ToggleAntiAfk = false
    end
end)


local LockPlane = misc:CreateToggle("Lock Plane", function(state)
    local plane;
    local PlayerName = tostring(game.Players.LocalPlayer)
    if state then
        local counter = 0

        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            counter = counter + 1
        end

        if counter == 1 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Info";
                Text = "You need to be spawned in";
                Button1 = "Understood";
                Duration = math.huge
            })
        else
            for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
                if v.Name == "Head" then
                else
                    plane = v
                end
            end
            plane.PrimaryPart.Anchored = true
        end
    elseif not state then
        for i, v in pairs(game.Workspace[PlayerName]:GetChildren()) do
            if v.Name == "Head" then
            else
                v.PrimaryPart.Anchored = false
            end
        end
    end
end)